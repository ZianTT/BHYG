on:
  push:
    branches:
      - main
      - dev
    tags:
      - '*'
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.12
      - name: Install Dependencies
        run: pip install -r requirements.txt
      - name: Build Binary
        run: pyinstaller -F main.py
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: BHYG-Windows
          path: dist

  linux:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.12
      - name: Install Dependencies
        run: pip install -r requirements.txt
      - name: Build Binary
        run: pyinstaller -F main.py
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: BHYG-Linux
          path: dist
  macos-x64:
    runs-on: macos-13
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.12
      - name: Install Dependencies
        run: pip install -r requirements.txt
      - name: Build Binary
        run: pyinstaller -F main.py
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: BHYG-macOS-Intel
          path: dist
  macos-arm64:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.12
      - name: Install Dependencies
        run: pip install -r requirements.txt
      - name: Build Binary
        run: pyinstaller -F main.py
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: BHYG-macOS-Apple_Silicon
          path: dist
  release:
    runs-on: ubuntu-latest
    needs: [windows, linux, macos-x64, macos-arm64]
    steps:
      - name: Draft Prerelease
        uses: release-drafter/release-drafter@v6.0.0
        if: github.event_name == 'push'
        id: release-drafter-pre
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          config-name: .github/release-drafter.yml
          pre-release-identifier: alpha
          prerelease: true
      - name: Draft Release
        uses: release-drafter/release-drafter@v6.0.0
        if: github.event_name == 'pull-request'
        id: release-drafter
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          config-name: .github/release-drafter.yml
          prerelease: false
      - name: Upload Release Asset Windows Pre
        uses: actions/upload-release-asset@v1
        if: github.event_name == 'push'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release-drafter-pre.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./dist/BHYG-Windows.zip
          asset_name: BHYG-Windows.zip
          asset_content_type: application/zip
      - name: Upload Release Asset Linux Pre
        uses: actions/upload-release-asset@v1
        if: github.event_name == 'push'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release-drafter-pre.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./dist/BHYG-Linux.zip
          asset_name: BHYG-Linux.zip
          asset_content_type: application/zip
      - name: Upload Release Asset macOS Intel Pre
        uses: actions/upload-release-asset@v1
        if: github.event_name == 'push'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release-drafter-pre.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./dist/BHYG-macOS-Intel.zip
          asset_name: BHYG-macOS-Intel.zip
          asset_content_type: application/zip
      - name: Upload Release Asset macOS Apple Silicon Pre
        uses: actions/upload-release-asset@v1
        if: github.event_name == 'push'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release-drafter-pre.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./dist/BHYG-macOS-Apple_Silicon.zip
          asset_name: BHYG-macOS-Apple_Silicon.zip
          asset_content_type: application/zip
      - name: Upload Release Asset Windows
        uses: actions/upload-release-asset@v1
        if: github.event_name == 'pull-request'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release-drafter.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./dist/BHYG-Windows.zip
          asset_name: BHYG-Windows.zip
          asset_content_type: application/zip
      - name: Upload Release Asset Linux
        uses: actions/upload-release-asset@v1
        if: github.event_name == 'pull-request'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release-drafter.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./dist/BHYG-Linux.zip
          asset_name: BHYG-Linux.zip
          asset_content_type: application/zip
      - name: Upload Release Asset macOS Intel
        uses: actions/upload-release-asset@v1
        if: github.event_name == 'pull-request'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release-drafter.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./dist/BHYG-macOS-Intel.zip
          asset_name: BHYG-macOS-Intel.zip
          asset_content_type: application/zip
      - name: Upload Release Asset macOS Apple Silicon
        uses: actions/upload-release-asset@v1
        if: github.event_name == 'pull-request'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release-drafter.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./dist/BHYG-macOS-Apple_Silicon.zip
          asset_name: BHYG-macOS-Apple_Silicon.zip
          asset_content_type: application/zip